script - "start" : "node filename.js"  => we can user this to avoid to run every time node file.js file
"dev" : nodemon filename.js   to run dev server

install nodemon (dev dependecy)
unintall npm unintall package name

NPM installation 


package.json
npm init (step by Step)
npm init - y (everything default)

npm install ==> install external modules
nom install -D <packagename> or npm install --save-dev <packagename> ===> for dev dependencies



package.json
 "dependencies": {
    "lodash": "^4.17.21",
    "nodemailer": "^6.9.6"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  }


  "scripts": {
    "start": "node app.js",
    "dev": "nodemon app.js"
  }, == to run /start project with diffent cammand  eg npm start will start node app.js

  npr run dev will run nodemon app.js





FS-Module

Create files:
1 fs.appendFile()
2 fs.open()
3 fs.writeFile()


The fs.appendFile(): method appends specified content to a file. If the file does not exist, the file will be created:
The fs.open(): method takes a "flag" as the second argument, if the flag is "w" for "writing", the specified file is opened for writing. 
                If the file does not exist, an empty file is created:
The fs.writeFile() method replaces the specified file and content if it exists. If the file does not exist, a new file, 
                    containing the specified content, will be created:

Update Files
The File System module has methods for updating files:
fs.appendFile()
fs.writeFile()

Delete Files
To delete a file with the File System module,  use the fs.unlink() method.
The fs.unlink() method deletes the specified file:

Rename Files
To rename a file with the File System module,  use the fs.rename() method.
The fs.rename() method renames the specified file:
